let express,bodyParser,mongoose,passport,LocalStrategy,expressSession,methodOverride,flash,User,locationRoutes,commentRoutes,authRoutes,seedDB;_a0d‍.w("express",[["default",["express"],function(v){express=v}]]);_a0d‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_a0d‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_a0d‍.w("passport",[["default",["passport"],function(v){passport=v}]]);_a0d‍.w("passport-local",[["default",["LocalStrategy"],function(v){LocalStrategy=v}]]);_a0d‍.w("express-session",[["default",["expressSession"],function(v){expressSession=v}]]);_a0d‍.w("method-override",[["default",["methodOverride"],function(v){methodOverride=v}]]);_a0d‍.w("connect-flash",[["default",["flash"],function(v){flash=v}]]);_a0d‍.w("./models/user",[["User",["User"],function(v){User=v}]]);_a0d‍.w("./routes/locations",[["router",["locationRoutes"],function(v){locationRoutes=v}]]);_a0d‍.w("./routes/comments",[["router",["commentRoutes"],function(v){commentRoutes=v}]]);_a0d‍.w("./routes/index",[["router",["authRoutes"],function(v){authRoutes=v}]]);_a0d‍.w("./seeds",[["seedDB",["seedDB"],function(v){seedDB=v}]]);













// seedDB();
mongoose.connect("mongodb://localhost/witcher-camp");
const app = express();

app.use(express.static(__dirname + "/public"));
app.use(bodyParser.urlencoded({extended: true}));
app.use(expressSession({
    secret: "The Witcher is the best game ever!",
    resave: false,
    saveUninitialized: false
}));
app.use(flash());
app.use(passport.initialize());
app.use(passport.session());
app.use(methodOverride("_method"));
app.use((req, res, next) => {
    res.locals.currentUser = req.user;
    res.locals.error = req.flash("error");
    res.locals.success = req.flash("success");
    next();
});
app.use(authRoutes);
app.use("/locations/:id/comments", commentRoutes);
app.use("/locations", locationRoutes);


passport.use(new LocalStrategy(User.authenticate()));
passport.serializeUser(User.serializeUser());
passport.deserializeUser(User.deserializeUser());

app.set("view engine", "ejs");

app.listen(3000, () => {
    console.log("Server up");
});